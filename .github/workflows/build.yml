jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: release-info
      name: Get Release Info
      uses: GeyserMC/actions/previous-release@master
      with:
        data: ${{ vars.RELEASEACTION_PREVRELEASE }}
    - continue-on-error: true
      name: Setup Gradle
      uses: GeyserMC/actions/setup-gradle-composite@master
      with:
        setup-java_java-version: 21
    - continue-on-error: true
      env:
        BUILD_NUMBER: ${{ steps.release-info.outputs.curentRelease }}
      name: Build Geyser
      run: ./gradlew build
    - continue-on-error: true
      if: success()
      name: Archive Artifacts
      uses: GeyserMC/actions/upload-multi-artifact@master
      with:
        artifacts: 'bootstrap/mod/fabric/build/libs/Geyser-Fabric.jar

          bootstrap/mod/neoforge/build/libs/Geyser-NeoForge.jar

          bootstrap/standalone/build/libs/Geyser-Standalone.jar

          bootstrap/spigot/build/libs/Geyser-Spigot.jar

          bootstrap/bungeecord/build/libs/Geyser-BungeeCord.jar

          bootstrap/velocity/build/libs/Geyser-Velocity.jar

          bootstrap/viaproxy/build/libs/Geyser-ViaProxy.jar

          '
    - continue-on-error: true
      env:
        BUILD_NUMBER: ${{ steps.release-info.outputs.curentRelease }}
        ORG_GRADLE_PROJECT_geysermcPassword: ${{ secrets.DEPLOY_PASS }}
        ORG_GRADLE_PROJECT_geysermcUsername: ${{ vars.DEPLOY_USER }}
      if: ${{ success() && github.repository == 'GeyserMC/Geyser' && github.ref_name
        == 'master' }}
      name: Publish to Maven Repository
      run: ./gradlew publish
    - continue-on-error: true
      id: get-version
      if: ${{ (success() || failure()) && github.repository == 'GeyserMC/Geyser' }}
      name: Get Version
      run: 'version=$(cat gradle.properties | grep -o "version=[0-9\\.]*" | cut -d"="
        -f2)

        echo "VERSION=${version}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: metadata
      if: ${{ (success() || failure()) && github.repository == 'GeyserMC/Geyser' }}
      name: Get Release Metadata
      uses: GeyserMC/actions/release@master
      with:
        appID: ${{ secrets.RELEASE_APP_ID }}
        appPrivateKey: ${{ secrets.RELEASE_APP_PK }}
        files: 'bungeecord:bootstrap/bungeecord/build/libs/Geyser-BungeeCord.jar

          fabric:bootstrap/mod/fabric/build/libs/Geyser-Fabric.jar

          neoforge:bootstrap/mod/neoforge/build/libs/Geyser-NeoForge.jar

          spigot:bootstrap/spigot/build/libs/Geyser-Spigot.jar

          standalone:bootstrap/standalone/build/libs/Geyser-Standalone.jar

          velocity:bootstrap/velocity/build/libs/Geyser-Velocity.jar

          viaproxy:bootstrap/viaproxy/build/libs/Geyser-ViaProxy.jar

          '
        releaseEnabled: false
        releaseProject: geyser
        releaseVersion: ${{ steps.get-version.outputs.VERSION }}
        saveMetadata: true
    - continue-on-error: true
      if: ${{ success() && github.repository == 'GeyserMC/Geyser' && github.ref_name
        == 'master' }}
      name: Publish to Downloads API
      uses: GeyserMC/actions/upload-release@master
      with:
        changelog: ${{ steps.metadata.outputs.body }}
        files: 'bootstrap/bungeecord/build/libs/Geyser-BungeeCord.jar

          bootstrap/mod/fabric/build/libs/Geyser-Fabric.jar

          bootstrap/mod/neoforge/build/libs/Geyser-NeoForge.jar

          bootstrap/spigot/build/libs/Geyser-Spigot.jar

          bootstrap/standalone/build/libs/Geyser-Standalone.jar

          bootstrap/velocity/build/libs/Geyser-Velocity.jar

          bootstrap/viaproxy/build/libs/Geyser-ViaProxy.jar

          '
        host: ${{ secrets.DOWNLOADS_SERVER_IP }}
        privateKey: ${{ secrets.DOWNLOADS_PRIVATE_KEY }}
        username: ${{ vars.DOWNLOADS_USERNAME }}
    - continue-on-error: true
      env:
        BUILD_NUMBER: ${{ steps.release-info.outputs.curentRelease }}
        MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
      if: ${{ success() && github.repository == 'GeyserMC/Geyser' && github.ref_name
        == 'master' }}
      name: Publish to Modrinth (Fabric)
      run: ./gradlew fabric:modrinth
    - continue-on-error: true
      env:
        BUILD_NUMBER: ${{ steps.release-info.outputs.curentRelease }}
        MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
      if: ${{ success() && github.repository == 'GeyserMC/Geyser' && github.ref_name
        == 'master' }}
      name: Publish to Modrinth (NeoForge)
      run: ./gradlew neoforge:modrinth
    - continue-on-error: true
      if: ${{ (success() || failure()) && github.repository == 'GeyserMC/Geyser' }}
      name: Notify Discord
      uses: GeyserMC/actions/notify-discord@master
      with:
        body: ${{ steps.metadata.outputs.body }}
        discordWebhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
name: Build
on:
  repository_dispatch:
    types: trigger-ga___build.yml
